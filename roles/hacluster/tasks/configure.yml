---

- name: generate nodes string
  set_fact:
    hacluster_joined_nodes: "{{ hacluster_nodes | join(' ') }}"

- name: debug haclusters
  debug:
    msg: "{{ hacluster_joined_nodes }}"

- name: authenticate cluster nodes
  shell: pcs cluster auth -u hacluster -p '{{ hacluster_passwd }}' {{ hacluster_joined_nodes }} > {{ ansible_env.HOME }}/hacluster_auth
  args:
    creates: "{{ ansible_env.HOME }}/hacluster_auth"

- name: setup cluster nodes
  shell: pcs cluster setup --name hacluster {{ hacluster_joined_nodes }} > {{ ansible_env.HOME }}/hacluster_setup
  args:
    creates: "{{ ansible_env.HOME }}/hacluster_setup"

- name: start/enable cluster
  shell: |
    pcs cluster start --all
    pcs cluster enable --all

- name: configure cluster properties
  shell: |
    pcs property set stonith-enabled=false
    pcs property set no-quorum-policy=ignore > {{ ansible_env.HOME }}/hacluster_properties
  args:
    creates: "{{ ansible_env.HOME }}/hacluster_properties"
  notify:
    - restart hacluster

- name: create virtual_ip resource
  shell: pcs resource create virtual_ip ocf:heartbeat:IPaddr2 ip={{ hacluster_virtual_ip }} cidr_netmask=32 op monitor interval=30s > {{ ansible_env.HOME }}/hacluster_virtual_ip
  args:
    creates: "{{ ansible_env.HOME }}/hacluster_virtual_ip"
  notify:
    - restart hacluster
