---

- name: download prometheus zipped archive
  get_url:
    url: https://jfrog.example.com/artifactory/generic-local/prometheus-2.15.2.linux-amd64.tar.gz
    dest: "{{ ansible_env.HOME }}/prometheus-2.15.2.linux-amd64.tar.gz"

- name: extract prometheus zipped archive
  unarchive:
    src: "{{ ansible_env.HOME }}/prometheus-2.15.2.linux-amd64.tar.gz"
    dest: "{{ ansible_env.HOME }}"
    remote_src: yes

- name: create prometheus directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /etc/prometheus
    - /var/lib/prometheus

- name: copy prometheus bin files
  copy:
    src: "{{ ansible_env.HOME }}/prometheus-2.15.2.linux-amd64/{{ item }}"
    dest: /usr/local/bin/
    remote_src: yes
    mode: preserve
  with_items:
    - prometheus
    - promtool
  notify:
    - restart prometheus

- name: copy prometheus config files
  copy:
    src: "{{ ansible_env.HOME }}/prometheus-2.15.2.linux-amd64/{{ item }}"
    dest: /etc/prometheus/
    remote_src: yes
    mode: preserve
  with_items:
    - consoles
    - console_libraries

- name: configure prometheus
  template:
    src: templates/prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
  notify:
    - reload prometheus

- name: generate prometheus service file
  template:
    src: templates/prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
  notify:
    - daemon reload
    - restart prometheus

- name: configure rules
  copy:
    src: files/rules.yml
    dest: /etc/prometheus/rules.yml
  notify:
    - reload prometheus

- name: start/enable prometheus
  systemd:
    name: prometheus
    state: started
    enabled: yes
